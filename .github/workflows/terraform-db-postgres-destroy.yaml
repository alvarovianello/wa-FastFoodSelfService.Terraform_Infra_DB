name: Destroy DB Postgres RDS AWS and Import AWS Resources

on:
  workflow_dispatch:

environment: production

env:
  TF_VAR_regionDefault: ${{ vars.REGION_DEFAULT }}
  TF_VAR_projectName: ${{ vars.PROJECT_NAME }}
  TF_VAR_dbPassword: ${{ secrets.DB_PASSWORD }}
  TF_VAR_dbIdentifier: ${{ vars.DB_IDENTIFIER }}
  TF_VAR_dbName: ${{ vars.DB_NAME }}
  TF_VAR_dbUser: ${{ vars.DB_USER}}
  
  DB_IDENTIFIER: ${{ vars.DB_IDENTIFIER }}
  DB_SECURITY_GROUP_ID: ${{ vars.DB_SECURITY_GROUP_ID }}
  DB_SUBNET_GROUP_ID: ${{ vars.DB_SUBNET_GROUP_ID }}  

jobs:
  import-and-destroy-db:
    name: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.REGION_DEFAULT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        working-directory: terraform_db_postgres
        run: terraform init -input=false

      - name: Import RDS Instance DB
        run: terraform import aws_db_instance.postgres_db ${{ env.DB_IDENTIFIER }}
        working-directory: terraform_db_postgres

      - name: Import Security Group DB
        run: terraform import aws_security_group.sg-fastfood-db ${{ env.DB_SECURITY_GROUP_ID }}
        working-directory: terraform_db_postgres

      - name: Import Subnet Group DB
        run: terraform import aws_db_subnet_group.postgres-subnet-group ${{ env.DB_SUBNET_GROUP_ID }}
        working-directory: terraform_db_postgres

      - name: Terraform Plan
        run: terraform plan -out=tfplan -no-color -input=false
        working-directory: terraform_db_postgres

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: terraform_db_postgres