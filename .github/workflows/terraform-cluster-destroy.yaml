name: Destroy CLUSTER EKS AWS and Import AWS Resources

on:
  workflow_dispatch:



jobs:
  import-and-destroy-cluster:
    name: terraform
    runs-on: ubuntu-latest

    environment: production

    env:
      TF_VAR_regionDefault: ${{ vars.REGION_DEFAULT }}
      TF_VAR_projectName: ${{ vars.PROJECT_NAME }}
      TF_VAR_labRole: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/LabRole"
      TF_VAR_accessConfig: ${{ vars.ACCESS_CONFIG }}
      TF_VAR_nodeGrop: ${{ vars.NODE_GROUP }}
      TF_VAR_principalArn: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/voclabs"
      TF_VAR_policyArn: ${{ vars.POLICY_ARN }}

      CLUSTER_ACCESS_POLICY_ID: "${{ vars.PROJECT_NAME }}#${{ env.TF_VAR_principalArn }}#${{ vars.POLICY_ARN }}"
      CLUSTER_SECURITY_GROUP_ID: ${{ vars.CLUSTER_SECURITY_GROUP_ID }}
      CLUSTER_NODE_GROUP_ID: "${{ vars.PROJECT_NAME }}:${{ vars.NODE_GROUP }}"
      CLUSTER_NAME: ${{ vars.PROJECT_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.REGION_DEFAULT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        working-directory: terraform_cluster
        run: terraform init -input=false

      - name: Import Cluster EKS
        run: terraform import aws_eks_cluster.eks-cluster-fastfood ${{ env.CLUSTER_NAME }}
        working-directory: terraform_cluster

      - name: Import Node Group Cluster
        run: terraform import aws_eks_node_group.eks-node-fastfood ${{ env.CLUSTER_NODE_GROUP_ID }}
        working-directory: terraform_cluster

      - name: Import Security Group Cluster
        run: terraform import aws_security_group.sg-fastfood ${{ env.CLUSTER_SECURITY_GROUP_ID }}
        working-directory: terraform_cluster

      - name: Import Access Policy Cluster
        run: terraform import aws_eks_access_policy_association.eks-access-policy-fastfood ${{ env.CLUSTER_ACCESS_POLICY_ID }}
        working-directory: terraform_cluster

      - name: Terraform Plan
        run: terraform plan -out=tfplan -no-color -input=false
        working-directory: terraform_cluster

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: terraform_cluster
